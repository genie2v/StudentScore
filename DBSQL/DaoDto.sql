--테이블 생성
CREATE TABLE TBL_SCORE(
    SID NUMBER,
    NAME VARCHAR(20),
    KOR NUMBER(3),
    ENG NUMBER(3),
    MAT NUMBER(3)
);

--제약조건 PK
ALTER TABLE TBL_SCORE
ADD CONSTRAINT SCORE_SID_PK PRIMARY KEY(SID);
--제약조건 CK
ALTER TABLE TBL_SCORE
ADD (CONSTRAINT SCORE_KOR_CK CHECK (KOR BETWEEN 0 AND 100),
     CONSTRAINT SCORE_ENG_CK CHECK (ENG BETWEEN 0 AND 100),
     CONSTRAINT SCORE_MAT_CK CHECK (MAT BETWEEN 0 AND 100)
    );
    
SELECT * FROM TBL_SCORE;

--시퀀스 생성
CREATE SEQUENCE SCORESEQ
NOCACHE;

--DAO가 담당할 기능들
--데이터 입력
INSERT INTO TBL_SCORE(SID, NAME, KOR, ENG, MAT)
VALUES(SCORESEQ.NEXTVAL, '이름', 0, 0, 0);
--출력
SELECT SID, NAME, KOR, MAT,
    (KOR+ENG+MAT) AS TOT,
    (KOR+ENG+MAT)/3 AS AVG,
    RANK() OVER(ORDER BY(KOR+ENG+MAT) DESC) AS RANK
FROM TBL_SCORE ORDER BY SID ASC;
--인원수
SELECT COUNT(*) AS COUNT FROM TBL_SCORE;
--이름검색
SELECT SID, NAME, KOR, ENG, MAT, TOT, AVG, RANK
FROM (
        SELECT SID, NAME, KOR, ENG, MAT,
            (KOR+ENG+MAT) AS TOT,
            (KOR+ENG+MAT)/3 AS AVG,
            RANK() OVER(ORDER BY (KOR+ENG+MAT) DESC) AS RANK
        FROM TBL_SCORE
     )
WHERE NAME LIKE '%이름%';
--번호검색
SELECT SID, NAME, KOR, ENG, MAT, TOT, AVG, RANK
FROM (
        SELECT SID, NAME, KOR, ENG, MAT,
            (KOR+ENG+MAT) AS TOT,
            (KOR+ENG+MAT)/3 AS AVG,
            RANK() OVER(ORDER BY (KOR+ENG+MAT) DESC) AS RANK
        FROM TBL_SCORE
     )
WHERE SID=1;
--수정
UPDATE TBL_SCORE
SET NAME='수정이름', KOR=100, ENG=100, MAT=100
WHERE SID=1;
--삭제
DELETE FROM TBL_SCORE WHERE SID=1;

